@page "/logout"
@using blazorweb.Data;
@* @layout EmptyLayout *@
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject  ProtectedLocalStorage ProtectedLocalStore
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@inject NavigationManager NavigationManager



@code{

      protected override async Task OnAfterRenderAsync(bool firstRender){
			@* await base.OnAfterRenderAsync(firstRender); *@
			if(firstRender){

				@* Console.WriteLine("comes here session"); *@
				
		
					 @* var result= await ProtectedLocalStore.GetAsync<string>("token"); *@
                        var values = await QueryForFb.SignOut();

                        if(values ==null){
						 @* await sessionStorage.RemoveItemAsync("token"); *@
                         @* StateHasChanged(); *@

						 await ProtectedLocalStore.DeleteAsync("token");
                           NavigationManager.NavigateTo("/");

                           }else{
                            
                           }
						@* var result  = await localStorage.GetItemAsync<string>("token");
						@* name = result.Success? result.Value : null; *@
						@* localStorage.Changed += (sender, e) =>
            {
                Console.WriteLine($"Value for key {e.Key} changed from {e.OldValue} to {e.NewValue}");
            }; *@ 
						@* StateHasChanged(); *@
					
						}

				@* Console.WriteLine(name.GetType()); *@

				
		
			

		 } 
}